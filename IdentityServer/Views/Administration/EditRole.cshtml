@model IdentityServer.ViewModel.Administration.EditRoleViewModel

@{
    ViewData["Title"] = "Modifier un rôle";
}

<h1>Modifier un rôle</h1>

@Html.HiddenFor(model => model.returnUrl)

<form method="post" class="mt-3">
    
    <div class="form-group row">
        @Html.Label("", "Id", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Id, new { @disabled = "disabled", @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        @Html.Label("", Model.RoleName, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.RoleName, new { @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
    </div>
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Modifier le nom du rôle</button>
            @Html.ActionLink("Annuler", "ListeRoles", "Administration", null, new { @class = "btn btn-danger" })
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h3>Utilisateurs qui ont ce rôle</h3>
        </div>
        <div class="card-body">
            @if (Model.Users.Any())
            {
                foreach (var user in Model.Users)
                {
                    <h5 class="card-title">@user</h5>
                }
            }
            else
            {
                <h5 class="card-title">Aucun utilisateur n'a ce rôle pour le moment</h5>
            }
        </div>
        <div class="card-footer">
            @Html.ActionLink("Ajouter ou suppimer des utilisateurs", "EditUsersInRole", "Administration", new { roleId = Model.Id, returnUrl = Model.returnUrl },new { @class = "btn btn-success", @style= "width:auto" })
        </div>
    </div>


</form>
